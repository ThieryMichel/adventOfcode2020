// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Belt_Int = require("bs-platform/lib/js/belt_Int.js");
var Caml_int32 = require("bs-platform/lib/js/caml_int32.js");
var Belt_Option = require("bs-platform/lib/js/belt_Option.js");

var input = "1000390\n13,x,x,41,x,x,x,x,x,x,x,x,x,997,x,x,x,x,x,x,x,23,x,x,x,x,x,x,x,x,x,x,19,x,x,x,x,x,x,x,x,x,29,x,619,x,x,x,x,x,37,x,x,x,x,x,x,x,x,x,x,17";

function parseInput(input) {
  var match = input.split("\n");
  if (match.length !== 2) {
    throw {
          RE_EXN_ID: "Match_failure",
          _1: [
            "Day13.res",
            5,
            8
          ],
          Error: new Error()
        };
  }
  var line1 = match[0];
  var line2 = match[1];
  var idList = line2.split(",").reduce((function (acc, item) {
          var number = Belt_Int.fromString(item);
          if (number !== undefined) {
            return acc.concat([number]);
          } else {
            return acc;
          }
        }), []);
  return [
          Belt_Option.getExn(Belt_Int.fromString(line1)),
          idList
        ];
}

var match = parseInput(input);

var idList = match[1];

var target = match[0];

var match$1 = idList.map(function (id) {
        return [
                id,
                id - Caml_int32.mod_(target, id) | 0
              ];
      }).reduce((function (param, param$1) {
        var score = param$1[1];
        var resultScore = param[1];
        if (score < resultScore) {
          return [
                  param$1[0],
                  score
                ];
        } else {
          return [
                  param[0],
                  resultScore
                ];
        }
      }), [
      target,
      target
    ]);

var wait = match$1[1];

var id = match$1[0];

console.log(Math.imul(id, wait));

exports.input = input;
exports.parseInput = parseInput;
exports.target = target;
exports.idList = idList;
exports.id = id;
exports.wait = wait;
/* match Not a pure module */
