// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Belt_Array = require("bs-platform/lib/js/belt_Array.js");
var Caml_array = require("bs-platform/lib/js/caml_array.js");
var Caml_format = require("bs-platform/lib/js/caml_format.js");

var input = "99\n128\n154\n160\n61\n107\n75\n38\n15\n11\n129\n94\n157\n84\n121\n14\n119\n48\n30\n10\n55\n108\n74\n104\n91\n45\n134\n109\n164\n66\n146\n44\n116\n89\n79\n32\n149\n1\n136\n58\n96\n7\n60\n23\n31\n3\n65\n110\n90\n37\n43\n115\n122\n52\n113\n123\n161\n50\n95\n150\n120\n101\n126\n151\n114\n127\n73\n82\n162\n140\n51\n144\n36\n4\n163\n85\n42\n59\n67\n64\n86\n49\n2\n145\n135\n22\n24\n33\n137\n16\n27\n70\n133\n130\n20\n21\n83\n143\n100\n41\n76\n17";

var parsedInput = input.split("\n").map(Caml_format.caml_int_of_string).sort(function (a, b) {
      return a - b | 0;
    });

var intervals = parsedInput.reduce((function (acc, number, index) {
        var next = Belt_Array.get(parsedInput, index + 1 | 0);
        if (next !== undefined) {
          return Belt_Array.concat(acc, [next - number | 0]);
        } else {
          return Belt_Array.concat(acc, [3]);
        }
      }), [Caml_array.get(parsedInput, 0)]);

console.log(intervals);

function countInArray(array, itemToCount) {
  return array.filter(function (item) {
              return item === itemToCount;
            }).length;
}

var nbOne = countInArray(intervals, 1);

var nbThree = countInArray(intervals, 3);

var result = Math.imul(nbOne, nbThree);

console.log(result);

exports.input = input;
exports.parsedInput = parsedInput;
exports.intervals = intervals;
exports.countInArray = countInArray;
exports.nbOne = nbOne;
exports.nbThree = nbThree;
exports.result = result;
/* parsedInput Not a pure module */
