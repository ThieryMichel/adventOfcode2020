// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Js_exn = require("bs-platform/lib/js/js_exn.js");
var Belt_Int = require("bs-platform/lib/js/belt_Int.js");
var Belt_Array = require("bs-platform/lib/js/belt_Array.js");
var Pervasives = require("bs-platform/lib/js/pervasives.js");
var Belt_Option = require("bs-platform/lib/js/belt_Option.js");

var input = "S2\nW4\nF31\nN2\nE4\nF98\nR180\nW2\nN4\nE1\nL180\nW2\nS5\nF69\nW5\nF12\nE3\nF91\nR90\nE1\nL90\nF73\nW4\nN3\nR90\nF76\nR90\nF33\nW2\nL90\nF51\nE1\nS3\nL180\nF62\nN5\nL180\nN3\nE1\nL90\nF83\nR180\nW4\nF29\nE2\nL90\nL90\nN3\nW1\nS1\nE2\nL270\nL180\nN2\nE1\nF77\nN2\nF11\nL180\nE2\nF45\nN4\nW5\nS2\nL90\nN2\nF14\nL90\nW3\nF6\nN5\nE2\nR90\nE2\nL90\nF39\nL90\nF45\nW2\nF67\nW4\nF50\nE1\nF92\nW5\nF75\nN2\nW1\nS3\nR90\nW5\nF51\nL90\nE3\nF71\nN3\nE3\nF74\nE4\nS3\nW2\nL180\nE2\nS5\nL270\nR90\nN2\nR90\nE4\nL270\nS5\nE4\nW3\nL90\nN2\nF32\nE3\nN5\nE2\nR180\nF27\nS1\nR90\nF94\nE2\nF82\nN3\nL90\nF100\nW4\nL90\nS1\nE4\nF26\nR90\nR90\nF12\nW4\nF70\nL90\nF100\nW4\nS2\nR90\nE3\nF11\nL90\nF32\nL180\nS2\nF11\nS2\nL90\nS3\nE4\nF93\nS1\nR90\nS2\nF20\nE2\nF9\nS5\nF23\nE4\nS2\nF38\nL90\nN3\nF3\nE2\nF37\nN2\nF89\nE5\nF43\nR90\nF88\nN5\nF52\nW5\nF24\nE4\nL180\nS4\nE3\nF14\nL90\nS2\nE5\nL180\nN4\nF98\nN4\nW2\nS2\nW1\nS3\nR90\nF98\nE4\nR270\nE2\nF45\nL90\nF75\nR180\nW3\nL180\nF42\nE2\nN4\nL90\nF2\nR180\nW5\nE5\nN5\nR180\nF92\nL90\nF95\nE3\nF61\nS5\nE2\nL180\nE1\nE2\nF27\nS3\nW2\nS1\nF86\nR270\nS1\nL90\nR90\nE5\nS2\nS2\nF93\nE2\nR270\nN3\nW3\nF74\nR90\nF94\nE2\nF88\nS1\nR90\nW4\nL90\nN5\nF59\nR90\nN1\nF24\nS2\nF10\nL90\nF72\nL90\nF55\nN2\nE1\nR90\nN1\nE1\nF12\nL90\nS5\nE5\nF44\nL180\nS4\nE2\nE5\nS1\nE5\nR180\nS1\nR90\nN3\nL90\nE2\nS4\nL90\nR90\nW1\nR90\nE5\nN1\nL90\nN1\nE3\nS5\nW1\nS1\nL270\nE2\nE4\nF31\nS2\nE4\nN2\nW3\nL90\nF7\nS3\nF23\nS3\nE1\nF15\nS1\nL90\nE4\nS1\nL90\nN3\nW1\nF13\nR180\nS3\nF37\nN3\nW5\nS5\nL90\nF55\nF54\nR90\nE1\nN4\nF68\nS5\nF3\nL180\nF75\nN3\nR90\nW4\nF78\nS4\nS3\nR180\nN2\nR90\nN1\nF20\nL180\nF12\nS4\nE4\nL180\nF10\nE2\nN5\nE3\nF13\nE3\nL90\nF55\nE5\nF96\nW1\nF100\nR90\nF97\nW4\nW2\nN4\nW4\nN3\nE4\nR90\nS1\nW4\nF80\nW2\nL90\nF64\nW5\nS2\nW3\nR180\nW1\nS2\nF83\nR180\nF37\nW4\nN4\nF57\nE3\nR90\nF37\nS4\nR180\nF62\nR90\nS5\nF9\nE3\nN4\nL90\nW4\nR90\nF97\nW4\nR180\nF2\nW4\nS1\nF77\nL180\nR90\nE4\nF58\nS2\nL90\nE1\nN3\nL90\nN2\nW4\nN1\nL90\nF94\nE1\nR90\nF29\nS3\nL180\nE2\nR180\nS5\nF62\nL90\nN2\nR90\nE4\nF93\nL90\nE5\nN4\nL180\nN3\nF20\nR90\nE3\nL90\nS3\nF24\nE4\nR90\nE4\nF89\nN1\nF13\nR180\nW1\nL90\nS3\nW5\nS4\nL180\nW3\nF90\nS4\nE3\nF36\nS3\nE2\nF37\nE5\nF31\nL90\nF68\nS5\nF74\nL90\nF59\nR180\nF20\nN1\nL180\nN5\nL90\nE3\nN2\nW4\nF54\nL90\nF77\nR270\nS5\nF82\nR90\nE2\nL180\nF59\nR90\nE5\nR90\nF26\nE4\nF91\nR90\nW4\nF6\nW5\nF34\nS4\nF61\nW2\nS2\nR270\nF45\nR180\nN5\nL90\nF26\nL90\nR90\nS1\nW3\nN5\nW5\nL90\nN3\nL90\nN3\nE3\nL90\nF1\nE4\nL90\nF60\nN3\nF7\nS1\nE1\nF68\nL90\nN5\nE5\nF36\nW3\nS5\nL270\nN2\nE1\nR90\nF8\nS3\nE1\nR90\nN1\nE2\nR90\nN1\nF90\nE2\nF63\nS2\nF17\nS1\nE3\nL90\nE4\nL180\nN4\nW1\nS4\nL90\nS5\nF15\nW1\nN5\nW3\nF97\nS3\nL90\nS2\nF78\nN3\nW5\nL90\nF68\nE3\nF24\nS3\nL90\nW2\nL90\nF49\nW4\nR90\nF82\nR270\nS1\nN3\nL90\nS4\nR90\nS2\nF46\nL180\nE4\nL180\nW2\nR90\nL90\nN1\nF88\nL180\nS5\nR90\nS4\nL90\nF68\nW5\nF13\nE4\nS3\nF91\nW3\nF85\nL180\nN4\nW5\nS3\nF89\nW1\nL180\nS2\nE3\nF82\nL90\nS4\nW5\nN5\nW2\nS4\nS2\nF82\nE2\nN4\nL90\nF80\nE2\nF49\nW5\nS3\nF76\nL90\nS1\nF41\nS3\nE1\nF26\nE3\nF53\nE2\nF73\nW3\nR180\nN2\nR90\nN3\nR90\nF16\nL90\nN3\nN1\nW5\nF19\nR90\nN4\nW5\nF6\nE3\nN5\nW2\nN3\nE4\nS4\nL90\nE3\nS2\nF9\nL180\nF70\nN5\nS4\nF63\nN3\nE1\nR180\nS3\nL90\nE5\nL90\nF76\nR180\nE2\nL180\nL90\nF24\nE5\nS5\nF98\nS3\nF97\nN5\nR90\nN5\nF43\nW1\nR180\nF38\nR180\nF13\nW2\nF16\nR90\nF6\nN1\nF98\nR180\nN2\nE1\nF19\nL90\nS1\nF33\nR90\nN3\nF75\nN4\nL180\nF35\nW1\nF61";

var parsedInput = Belt_Array.map(input.split("\n"), (function (line) {
        var letter = line.charAt(0);
        var number = Belt_Option.getExn(Belt_Int.fromString(line.substr(1)));
        return [
                letter,
                number
              ];
      }));

var match = Belt_Array.reduce(parsedInput, [
      10,
      -1,
      0,
      0
    ], (function (param, param$1) {
        var number = param$1[1];
        var letter = param$1[0];
        var y = param[3];
        var x = param[2];
        var offsetY = param[1];
        var offsetX = param[0];
        switch (letter) {
          case "E" :
              return [
                      offsetX + number | 0,
                      offsetY,
                      x,
                      y
                    ];
          case "F" :
              return [
                      offsetX,
                      offsetY,
                      x + Math.imul(number, offsetX) | 0,
                      y + Math.imul(number, offsetY) | 0
                    ];
          case "L" :
              if (number !== 90) {
                if (number !== 180) {
                  if (number !== 270) {
                    return Js_exn.raiseError("Incorrect value for rotation : " + String(number));
                  } else {
                    return [
                            -offsetY | 0,
                            offsetX,
                            x,
                            y
                          ];
                  }
                } else {
                  return [
                          -offsetX | 0,
                          -offsetY | 0,
                          x,
                          y
                        ];
                }
              } else {
                return [
                        offsetY,
                        -offsetX | 0,
                        x,
                        y
                      ];
              }
          case "N" :
              return [
                      offsetX,
                      offsetY - number | 0,
                      x,
                      y
                    ];
          case "R" :
              if (number !== 90) {
                if (number !== 180) {
                  if (number !== 270) {
                    return Js_exn.raiseError("Incorrect value for rotation : " + String(number));
                  } else {
                    return [
                            offsetY,
                            -offsetX | 0,
                            x,
                            y
                          ];
                  }
                } else {
                  return [
                          -offsetX | 0,
                          -offsetY | 0,
                          x,
                          y
                        ];
                }
              } else {
                return [
                        -offsetY | 0,
                        offsetX,
                        x,
                        y
                      ];
              }
          case "S" :
              return [
                      offsetX,
                      offsetY + number | 0,
                      x,
                      y
                    ];
          case "W" :
              return [
                      offsetX - number | 0,
                      offsetY,
                      x,
                      y
                    ];
          default:
            return Js_exn.raiseError("Unexpected letter : " + letter);
        }
      }));

var y = match[3];

var x = match[2];

var result = Pervasives.abs(x) + Pervasives.abs(y) | 0;

console.log(result);

exports.input = input;
exports.parsedInput = parsedInput;
exports.x = x;
exports.y = y;
exports.result = result;
/* parsedInput Not a pure module */
